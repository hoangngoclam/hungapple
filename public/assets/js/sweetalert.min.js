!(function (e, t) {
    "object" == typeof exports && "undefined" != typeof module
        ? (module.exports = t())
        : "function" == typeof define && define.amd
        ? define(t)
        : ((e = e || self).Sweetalert2 = t());
})(this, function () {
    "use strict";
    const e = "SweetAlert2:",
        t = (e) => e.charAt(0).toUpperCase() + e.slice(1),
        o = (e) => Array.prototype.slice.call(e),
        a = (t) => {
            console.warn(
                "".concat(e, " ").concat("object" == typeof t ? t.join(" ") : t)
            );
        },
        n = (t) => {
            console.error("".concat(e, " ").concat(t));
        },
        s = [],
        i = (e, t) => {
            (t = '"'
                .concat(
                    e,
                    '" is deprecated and will be removed in the next major release. Please use "'
                )
                .concat(t, '" instead.')),
                s.includes(t) || (s.push(t), a(t));
        },
        r = (e) => ("function" == typeof e ? e() : e),
        l = (e) => e && "function" == typeof e.toPromise,
        c = (e) => (l(e) ? e.toPromise() : Promise.resolve(e)),
        d = (e) => e && Promise.resolve(e) === e,
        u = {
            title: "",
            titleText: "",
            text: "",
            html: "",
            footer: "",
            icon: void 0,
            iconColor: void 0,
            iconHtml: void 0,
            template: void 0,
            toast: !1,
            showClass: {
                popup: "swal2-show",
                backdrop: "swal2-backdrop-show",
                icon: "swal2-icon-show",
            },
            hideClass: {
                popup: "swal2-hide",
                backdrop: "swal2-backdrop-hide",
                icon: "swal2-icon-hide",
            },
            customClass: {},
            target: "body",
            color: void 0,
            backdrop: !0,
            heightAuto: !0,
            allowOutsideClick: !0,
            allowEscapeKey: !0,
            allowEnterKey: !0,
            stopKeydownPropagation: !0,
            keydownListenerCapture: !1,
            showConfirmButton: !0,
            showDenyButton: !1,
            showCancelButton: !1,
            preConfirm: void 0,
            preDeny: void 0,
            confirmButtonText: "OK",
            confirmButtonAriaLabel: "",
            confirmButtonColor: void 0,
            denyButtonText: "No",
            denyButtonAriaLabel: "",
            denyButtonColor: void 0,
            cancelButtonText: "Cancel",
            cancelButtonAriaLabel: "",
            cancelButtonColor: void 0,
            buttonsStyling: !0,
            reverseButtons: !1,
            focusConfirm: !0,
            focusDeny: !1,
            focusCancel: !1,
            returnFocus: !0,
            showCloseButton: !1,
            closeButtonHtml: "&times;",
            closeButtonAriaLabel: "Close this dialog",
            loaderHtml: "",
            showLoaderOnConfirm: !1,
            showLoaderOnDeny: !1,
            imageUrl: void 0,
            imageWidth: void 0,
            imageHeight: void 0,
            imageAlt: "",
            timer: void 0,
            timerProgressBar: !1,
            width: void 0,
            padding: void 0,
            background: void 0,
            input: void 0,
            inputPlaceholder: "",
            inputLabel: "",
            inputValue: "",
            inputOptions: {},
            inputAutoTrim: !0,
            inputAttributes: {},
            inputValidator: void 0,
            returnInputValueOnDeny: !1,
            validationMessage: void 0,
            grow: !1,
            position: "center",
            progressSteps: [],
            currentProgressStep: void 0,
            progressStepsDistance: void 0,
            willOpen: void 0,
            didOpen: void 0,
            didRender: void 0,
            willClose: void 0,
            didClose: void 0,
            didDestroy: void 0,
            scrollbarPadding: !0,
        },
        m = [
            "allowEscapeKey",
            "allowOutsideClick",
            "background",
            "buttonsStyling",
            "cancelButtonAriaLabel",
            "cancelButtonColor",
            "cancelButtonText",
            "closeButtonAriaLabel",
            "closeButtonHtml",
            "color",
            "confirmButtonAriaLabel",
            "confirmButtonColor",
            "confirmButtonText",
            "currentProgressStep",
            "customClass",
            "denyButtonAriaLabel",
            "denyButtonColor",
            "denyButtonText",
            "didClose",
            "didDestroy",
            "footer",
            "hideClass",
            "html",
            "icon",
            "iconColor",
            "iconHtml",
            "imageAlt",
            "imageHeight",
            "imageUrl",
            "imageWidth",
            "preConfirm",
            "preDeny",
            "progressSteps",
            "returnFocus",
            "reverseButtons",
            "showCancelButton",
            "showCloseButton",
            "showConfirmButton",
            "showDenyButton",
            "text",
            "title",
            "titleText",
            "willClose",
        ],
        p = {},
        w = [
            "allowOutsideClick",
            "allowEnterKey",
            "backdrop",
            "focusConfirm",
            "focusDeny",
            "focusCancel",
            "returnFocus",
            "heightAuto",
            "keydownListenerCapture",
        ],
        g = (e) => Object.prototype.hasOwnProperty.call(u, e),
        h = (e) => -1 !== m.indexOf(e),
        f = (e) => p[e],
        b = (e) => {
            !e.backdrop &&
                e.allowOutsideClick &&
                a(
                    '"allowOutsideClick" parameter requires `backdrop` parameter to be set to `true`'
                );
            for (const n in e)
                g((o = n)) || a('Unknown parameter "'.concat(o, '"')),
                    e.toast &&
                        ((t = n),
                        w.includes(t) &&
                            a(
                                'The parameter "'.concat(
                                    t,
                                    '" is incompatible with toasts'
                                )
                            )),
                    f((t = n)) && i(t, f(t));
            var t, o;
        };
    var y = (e) => {
        const t = {};
        for (const o in e) t[e[o]] = "swal2-" + e[o];
        return t;
    };
    const v = y([
            "container",
            "shown",
            "height-auto",
            "iosfix",
            "popup",
            "modal",
            "no-backdrop",
            "no-transition",
            "toast",
            "toast-shown",
            "show",
            "hide",
            "close",
            "title",
            "html-container",
            "actions",
            "confirm",
            "deny",
            "cancel",
            "default-outline",
            "footer",
            "icon",
            "icon-content",
            "image",
            "input",
            "file",
            "range",
            "select",
            "radio",
            "checkbox",
            "label",
            "textarea",
            "inputerror",
            "input-label",
            "validation-message",
            "progress-steps",
            "active-progress-step",
            "progress-step",
            "progress-step-line",
            "loader",
            "loading",
            "styled",
            "top",
            "top-start",
            "top-end",
            "top-left",
            "top-right",
            "center",
            "center-start",
            "center-end",
            "center-left",
            "center-right",
            "bottom",
            "bottom-start",
            "bottom-end",
            "bottom-left",
            "bottom-right",
            "grow-row",
            "grow-column",
            "grow-fullscreen",
            "rtl",
            "timer-progress-bar",
            "timer-progress-bar-container",
            "scrollbar-measure",
            "icon-success",
            "icon-warning",
            "icon-info",
            "icon-question",
            "icon-error",
        ]),
        k = y(["success", "warning", "info", "question", "error"]),
        x = () => document.body.querySelector(".".concat(v.container)),
        C = (e) => {
            const t = x();
            return t ? t.querySelector(e) : null;
        },
        A = (e) => C(".".concat(e)),
        P = () => A(v.popup),
        B = () => A(v.icon),
        E = () => A(v.title),
        T = () => A(v["html-container"]),
        S = () => A(v.image),
        L = () => A(v["progress-steps"]),
        j = () => A(v["validation-message"]),
        O = () => C(".".concat(v.actions, " .").concat(v.confirm)),
        z = () => C(".".concat(v.actions, " .").concat(v.deny)),
        q = () => C(".".concat(v.loader)),
        M = () => C(".".concat(v.actions, " .").concat(v.cancel)),
        D = () => A(v.actions),
        H = () => A(v.footer),
        I = () => A(v["timer-progress-bar"]),
        V = () => A(v.close),
        N = () => {
            const e = o(
                P().querySelectorAll(
                    '[tabindex]:not([tabindex="-1"]):not([tabindex="0"])'
                )
            ).sort(
                (e, t) => (
                    (e = parseInt(e.getAttribute("tabindex"))),
                    (t = parseInt(t.getAttribute("tabindex"))) < e
                        ? 1
                        : e < t
                        ? -1
                        : 0
                )
            );
            var t = o(
                P().querySelectorAll(
                    '\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex="0"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n'
                )
            ).filter((e) => "-1" !== e.getAttribute("tabindex"));
            return ((e) => {
                const t = [];
                for (let o = 0; o < e.length; o++)
                    -1 === t.indexOf(e[o]) && t.push(e[o]);
                return t;
            })(e.concat(t)).filter((e) => se(e));
        },
        Z = () =>
            !W(document.body, v["toast-shown"]) &&
            !W(document.body, v["no-backdrop"]),
        R = () => P() && W(P(), v.toast);
    function F(e) {
        var t = 1 < arguments.length && void 0 !== arguments[1] && arguments[1];
        const o = I();
        se(o) &&
            (t && ((o.style.transition = "none"), (o.style.width = "100%")),
            setTimeout(() => {
                (o.style.transition = "width ".concat(e / 1e3, "s linear")),
                    (o.style.width = "0%");
            }, 10));
    }
    const U = { previousBodyPadding: null },
        Y = (e, t) => {
            if (((e.textContent = ""), t)) {
                const a = new DOMParser().parseFromString(t, "text/html");
                o(a.querySelector("head").childNodes).forEach((t) => {
                    e.appendChild(t);
                }),
                    o(a.querySelector("body").childNodes).forEach((t) => {
                        e.appendChild(t);
                    });
            }
        },
        W = (e, t) => {
            if (!t) return !1;
            var o = t.split(/\s+/);
            for (let t = 0; t < o.length; t++)
                if (!e.classList.contains(o[t])) return !1;
            return !0;
        },
        $ = (e, t, n) => {
            var s, i;
            if (
                ((i = t),
                o((s = e).classList).forEach((e) => {
                    Object.values(v).includes(e) ||
                        Object.values(k).includes(e) ||
                        Object.values(i.showClass).includes(e) ||
                        s.classList.remove(e);
                }),
                t.customClass && t.customClass[n])
            ) {
                if (
                    "string" != typeof t.customClass[n] &&
                    !t.customClass[n].forEach
                )
                    return a(
                        "Invalid type of customClass."
                            .concat(
                                n,
                                '! Expected string or iterable object, got "'
                            )
                            .concat(typeof t.customClass[n], '"')
                    );
                J(e, t.customClass[n]);
            }
        },
        _ = (e, t) => {
            if (!t) return null;
            switch (t) {
                case "select":
                case "textarea":
                case "file":
                    return e.querySelector(
                        ".".concat(v.popup, " > .").concat(v[t])
                    );
                case "checkbox":
                    return e.querySelector(
                        ".".concat(v.popup, " > .").concat(v.checkbox, " input")
                    );
                case "radio":
                    return (
                        e.querySelector(
                            "."
                                .concat(v.popup, " > .")
                                .concat(v.radio, " input:checked")
                        ) ||
                        e.querySelector(
                            "."
                                .concat(v.popup, " > .")
                                .concat(v.radio, " input:first-child")
                        )
                    );
                case "range":
                    return e.querySelector(
                        ".".concat(v.popup, " > .").concat(v.range, " input")
                    );
                default:
                    return e.querySelector(
                        ".".concat(v.popup, " > .").concat(v.input)
                    );
            }
        },
        K = (e) => {
            var t;
            e.focus(),
                "file" !== e.type &&
                    ((t = e.value), (e.value = ""), (e.value = t));
        },
        X = (e, t, o) => {
            e &&
                t &&
                (t =
                    "string" == typeof t
                        ? t.split(/\s+/).filter(Boolean)
                        : t).forEach((t) => {
                    Array.isArray(e)
                        ? e.forEach((e) => {
                              o ? e.classList.add(t) : e.classList.remove(t);
                          })
                        : o
                        ? e.classList.add(t)
                        : e.classList.remove(t);
                });
        },
        J = (e, t) => {
            X(e, t, !0);
        },
        G = (e, t) => {
            X(e, t, !1);
        },
        Q = (e, t) => {
            var a = o(e.childNodes);
            for (let e = 0; e < a.length; e++) if (W(a[e], t)) return a[e];
        },
        ee = (e, t, o) => {
            (o = o === "".concat(parseInt(o)) ? parseInt(o) : o) ||
            0 === parseInt(o)
                ? (e.style[t] = "number" == typeof o ? "".concat(o, "px") : o)
                : e.style.removeProperty(t);
        },
        te = function (e) {
            e.style.display =
                1 < arguments.length && void 0 !== arguments[1]
                    ? arguments[1]
                    : "flex";
        },
        oe = (e) => {
            e.style.display = "none";
        },
        ae = (e, t, o, a) => {
            const n = e.querySelector(t);
            n && (n.style[o] = a);
        },
        ne = (e, t, o) => {
            t ? te(e, o) : oe(e);
        },
        se = (e) =>
            !(
                !e ||
                !(e.offsetWidth || e.offsetHeight || e.getClientRects().length)
            ),
        ie = () => !se(O()) && !se(z()) && !se(M()),
        re = (e) => !!(e.scrollHeight > e.clientHeight),
        le = (e) => {
            const t = window.getComputedStyle(e);
            var o = parseFloat(t.getPropertyValue("animation-duration") || "0");
            e = parseFloat(t.getPropertyValue("transition-duration") || "0");
            return 0 < o || 0 < e;
        },
        ce = () =>
            "undefined" == typeof window || "undefined" == typeof document,
        de = {},
        ue = (e) =>
            new Promise((t) => {
                if (!e) return t();
                var o = window.scrollX,
                    a = window.scrollY;
                (de.restoreFocusTimeout = setTimeout(() => {
                    de.previousActiveElement && de.previousActiveElement.focus
                        ? (de.previousActiveElement.focus(),
                          (de.previousActiveElement = null))
                        : document.body && document.body.focus(),
                        t();
                }, 100)),
                    window.scrollTo(o, a);
            }),
        me = '\n <div aria-labelledby="'
            .concat(v.title, '" aria-describedby="')
            .concat(v["html-container"], '" class="')
            .concat(
                v.popup,
                '" tabindex="-1">\n   <button type="button" class="'
            )
            .concat(v.close, '"></button>\n   <ul class="')
            .concat(v["progress-steps"], '"></ul>\n   <div class="')
            .concat(v.icon, '"></div>\n   <img class="')
            .concat(v.image, '" />\n   <h2 class="')
            .concat(v.title, '" id="')
            .concat(v.title, '"></h2>\n   <div class="')
            .concat(v["html-container"], '" id="')
            .concat(v["html-container"], '"></div>\n   <input class="')
            .concat(v.input, '" />\n   <input type="file" class="')
            .concat(v.file, '" />\n   <div class="')
            .concat(
                v.range,
                '">\n     <input type="range" />\n     <output></output>\n   </div>\n   <select class="'
            )
            .concat(v.select, '"></select>\n   <div class="')
            .concat(v.radio, '"></div>\n   <label for="')
            .concat(v.checkbox, '" class="')
            .concat(
                v.checkbox,
                '">\n     <input type="checkbox" />\n     <span class="'
            )
            .concat(v.label, '"></span>\n   </label>\n   <textarea class="')
            .concat(v.textarea, '"></textarea>\n   <div class="')
            .concat(v["validation-message"], '" id="')
            .concat(v["validation-message"], '"></div>\n   <div class="')
            .concat(v.actions, '">\n     <div class="')
            .concat(v.loader, '"></div>\n     <button type="button" class="')
            .concat(
                v.confirm,
                '"></button>\n     <button type="button" class="'
            )
            .concat(v.deny, '"></button>\n     <button type="button" class="')
            .concat(v.cancel, '"></button>\n   </div>\n   <div class="')
            .concat(v.footer, '"></div>\n   <div class="')
            .concat(v["timer-progress-bar-container"], '">\n     <div class="')
            .concat(v["timer-progress-bar"], '"></div>\n   </div>\n </div>\n')
            .replace(/(^|\n)\s*/g, ""),
        pe = () => {
            const e = x();
            return (
                !!e &&
                (e.remove(),
                G(
                    [document.documentElement, document.body],
                    [v["no-backdrop"], v["toast-shown"], v["has-column"]]
                ),
                !0)
            );
        },
        we = () => {
            de.currentInstance.resetValidationMessage();
        },
        ge = () => {
            const e = P(),
                t = Q(e, v.input),
                o = Q(e, v.file),
                a = e.querySelector(".".concat(v.range, " input")),
                n = e.querySelector(".".concat(v.range, " output")),
                s = Q(e, v.select),
                i = e.querySelector(".".concat(v.checkbox, " input")),
                r = Q(e, v.textarea);
            (t.oninput = we),
                (o.onchange = we),
                (s.onchange = we),
                (i.onchange = we),
                (r.oninput = we),
                (a.oninput = () => {
                    we(), (n.value = a.value);
                }),
                (a.onchange = () => {
                    we(), (a.nextSibling.value = a.value);
                });
        },
        he = (e) => ("string" == typeof e ? document.querySelector(e) : e),
        fe = (e) => {
            const t = P();
            t.setAttribute("role", e.toast ? "alert" : "dialog"),
                t.setAttribute("aria-live", e.toast ? "polite" : "assertive"),
                e.toast || t.setAttribute("aria-modal", "true");
        },
        be = (e) => {
            "rtl" === window.getComputedStyle(e).direction && J(x(), v.rtl);
        },
        ye = (e, t) => {
            e instanceof HTMLElement
                ? t.appendChild(e)
                : "object" == typeof e
                ? ((e, t) => {
                      e.jquery ? ve(t, e) : Y(t, e.toString());
                  })(e, t)
                : e && Y(t, e);
        },
        ve = (e, t) => {
            if (((e.textContent = ""), 0 in t))
                for (let o = 0; o in t; o++) e.appendChild(t[o].cloneNode(!0));
            else e.appendChild(t.cloneNode(!0));
        },
        ke = (() => {
            if (ce()) return !1;
            var e = document.createElement("div"),
                t = {
                    WebkitAnimation: "webkitAnimationEnd",
                    animation: "animationend",
                };
            for (const o in t)
                if (
                    Object.prototype.hasOwnProperty.call(t, o) &&
                    void 0 !== e.style[o]
                )
                    return t[o];
            return !1;
        })();
    function xe(e, o, a) {
        ne(e, a["show".concat(t(o), "Button")], "inline-block"),
            Y(e, a["".concat(o, "ButtonText")]),
            e.setAttribute("aria-label", a["".concat(o, "ButtonAriaLabel")]),
            (e.className = v[o]),
            $(e, a, "".concat(o, "Button")),
            J(e, a["".concat(o, "ButtonClass")]);
    }
    var Ce = {
        awaitingPromise: new WeakMap(),
        promise: new WeakMap(),
        innerParams: new WeakMap(),
        domCache: new WeakMap(),
    };
    const Ae = [
            "input",
            "file",
            "range",
            "select",
            "radio",
            "checkbox",
            "textarea",
        ],
        Pe = (e) => {
            for (let o = 0; o < e.attributes.length; o++) {
                var t = e.attributes[o].name;
                ["type", "value", "style"].includes(t) || e.removeAttribute(t);
            }
        },
        Be = (e, t) => {
            (e.placeholder && !t.inputPlaceholder) ||
                (e.placeholder = t.inputPlaceholder);
        },
        Ee = (e, t, o) => {
            if (o.inputLabel) {
                e.id = v.input;
                const n = document.createElement("label");
                var a = v["input-label"];
                n.setAttribute("for", e.id),
                    (n.className = a),
                    J(n, o.customClass.inputLabel),
                    (n.innerText = o.inputLabel),
                    t.insertAdjacentElement("beforebegin", n);
            }
        },
        Te = (e) => ((e = v[e] || v.input), Q(P(), e)),
        Se = {};
    (Se.text =
        Se.email =
        Se.password =
        Se.number =
        Se.tel =
        Se.url =
            (e, t) => (
                "string" == typeof t.inputValue ||
                "number" == typeof t.inputValue
                    ? (e.value = t.inputValue)
                    : d(t.inputValue) ||
                      a(
                          'Unexpected type of inputValue! Expected "string", "number" or "Promise", got "'.concat(
                              typeof t.inputValue,
                              '"'
                          )
                      ),
                Ee(e, e, t),
                Be(e, t),
                (e.type = t.input),
                e
            )),
        (Se.file = (e, t) => (Ee(e, e, t), Be(e, t), e)),
        (Se.range = (e, t) => {
            const o = e.querySelector("input"),
                a = e.querySelector("output");
            return (
                (o.value = t.inputValue),
                (o.type = t.input),
                (a.value = t.inputValue),
                Ee(o, e, t),
                e
            );
        }),
        (Se.select = (e, t) => {
            if (((e.textContent = ""), t.inputPlaceholder)) {
                const o = document.createElement("option");
                Y(o, t.inputPlaceholder),
                    (o.value = ""),
                    (o.disabled = !0),
                    (o.selected = !0),
                    e.appendChild(o);
            }
            return Ee(e, e, t), e;
        }),
        (Se.radio = (e) => ((e.textContent = ""), e)),
        (Se.checkbox = (e, t) => {
            const o = _(P(), "checkbox");
            (o.value = "1"),
                (o.id = v.checkbox),
                (o.checked = Boolean(t.inputValue));
            var a = e.querySelector("span");
            return Y(a, t.inputPlaceholder), e;
        }),
        (Se.textarea = (e, t) => (
            (e.value = t.inputValue),
            Be(e, t),
            Ee(e, e, t),
            setTimeout(() => {
                if ("MutationObserver" in window) {
                    const t = parseInt(window.getComputedStyle(P()).width);
                    new MutationObserver(() => {
                        var o =
                            e.offsetWidth +
                            ((o = e),
                            parseInt(window.getComputedStyle(o).marginLeft) +
                                parseInt(
                                    window.getComputedStyle(o).marginRight
                                ));
                        P().style.width = o > t ? "".concat(o, "px") : null;
                    }).observe(e, {
                        attributes: !0,
                        attributeFilter: ["style"],
                    });
                }
            }),
            e
        ));
    const Le = (e, t) => {
            const o = T();
            $(o, t, "htmlContainer"),
                t.html
                    ? (ye(t.html, o), te(o, "block"))
                    : t.text
                    ? ((o.textContent = t.text), te(o, "block"))
                    : oe(o),
                ((e, t) => {
                    const o = P(),
                        a = !(e = Ce.innerParams.get(e)) || t.input !== e.input;
                    Ae.forEach((e) => {
                        var n = v[e];
                        const s = Q(o, n);
                        ((e, t) => {
                            const o = _(P(), e);
                            if (o) {
                                Pe(o);
                                for (const e in t) o.setAttribute(e, t[e]);
                            }
                        })(e, t.inputAttributes),
                            (s.className = n),
                            a && oe(s);
                    }),
                        t.input &&
                            (a &&
                                ((e) => {
                                    if (!Se[e.input])
                                        return n(
                                            'Unexpected type of input! Expected "text", "email", "password", "number", "tel", "select", "radio", "checkbox", "textarea", "file" or "url", got "'.concat(
                                                e.input,
                                                '"'
                                            )
                                        );
                                    const t = Te(e.input),
                                        o = Se[e.input](t, e);
                                    te(o),
                                        setTimeout(() => {
                                            K(o);
                                        });
                                })(t),
                            ((e) => {
                                const t = Te(e.input);
                                e.customClass && J(t, e.customClass.input);
                            })(t));
                })(e, t);
        },
        je = (e, t) => {
            for (const o in k) t.icon !== o && G(e, k[o]);
            J(e, k[t.icon]), qe(e, t), Oe(), $(e, t, "icon");
        },
        Oe = () => {
            const e = P();
            var t = window
                .getComputedStyle(e)
                .getPropertyValue("background-color");
            const o = e.querySelectorAll(
                "[class^=swal2-success-circular-line], .swal2-success-fix"
            );
            for (let e = 0; e < o.length; e++) o[e].style.backgroundColor = t;
        },
        ze = (e, t) => {
            (e.textContent = ""),
                t.iconHtml
                    ? Y(e, Me(t.iconHtml))
                    : "success" === t.icon
                    ? Y(
                          e,
                          '\n      <div class="swal2-success-circular-line-left"></div>\n      <span class="swal2-success-line-tip"></span> <span class="swal2-success-line-long"></span>\n      <div class="swal2-success-ring"></div> <div class="swal2-success-fix"></div>\n      <div class="swal2-success-circular-line-right"></div>\n    '
                      )
                    : "error" === t.icon
                    ? Y(
                          e,
                          '\n      <span class="swal2-x-mark">\n        <span class="swal2-x-mark-line-left"></span>\n        <span class="swal2-x-mark-line-right"></span>\n      </span>\n    '
                      )
                    : Y(
                          e,
                          Me({ question: "?", warning: "!", info: "i" }[t.icon])
                      );
        },
        qe = (e, t) => {
            if (t.iconColor) {
                (e.style.color = t.iconColor),
                    (e.style.borderColor = t.iconColor);
                for (const o of [
                    ".swal2-success-line-tip",
                    ".swal2-success-line-long",
                    ".swal2-x-mark-line-left",
                    ".swal2-x-mark-line-right",
                ])
                    ae(e, o, "backgroundColor", t.iconColor);
                ae(e, ".swal2-success-ring", "borderColor", t.iconColor);
            }
        },
        Me = (e) =>
            '<div class="'.concat(v["icon-content"], '">').concat(e, "</div>"),
        De = (e, t) => {
            ((e, t) => {
                var o = x();
                const a = P();
                t.toast
                    ? (ee(o, "width", t.width),
                      (a.style.width = "100%"),
                      a.insertBefore(q(), B()))
                    : ee(a, "width", t.width),
                    ee(a, "padding", t.padding),
                    t.color && (a.style.color = t.color),
                    t.background && (a.style.background = t.background),
                    oe(j()),
                    ((e, t) => {
                        (e.className = ""
                            .concat(v.popup, " ")
                            .concat(se(e) ? t.showClass.popup : "")),
                            t.toast
                                ? (J(
                                      [document.documentElement, document.body],
                                      v["toast-shown"]
                                  ),
                                  J(e, v.toast))
                                : J(e, v.modal),
                            $(e, t, "popup"),
                            "string" == typeof t.customClass &&
                                J(e, t.customClass),
                            t.icon && J(e, v["icon-".concat(t.icon)]);
                    })(a, t);
            })(0, t),
                ((e, t) => {
                    var o,
                        n,
                        s = x();
                    s &&
                        ((n = s),
                        "string" == typeof (o = t.backdrop)
                            ? (n.style.background = o)
                            : o ||
                              J(
                                  [document.documentElement, document.body],
                                  v["no-backdrop"]
                              ),
                        (n = s),
                        (o = t.position) in v
                            ? J(n, v[o])
                            : (a(
                                  'The "position" parameter is not valid, defaulting to "center"'
                              ),
                              J(n, v.center)),
                        (o = s),
                        !(n = t.grow) ||
                            "string" != typeof n ||
                            ((n = "grow-".concat(n)) in v && J(o, v[n])),
                        $(s, t, "container"));
                })(0, t),
                ((e, t) => {
                    const o = L();
                    if (!t.progressSteps || 0 === t.progressSteps.length)
                        return oe(o);
                    te(o),
                        (o.textContent = ""),
                        t.currentProgressStep >= t.progressSteps.length &&
                            a(
                                "Invalid currentProgressStep parameter, it should be less than progressSteps.length (currentProgressStep like JS arrays starts from 0)"
                            ),
                        t.progressSteps.forEach((e, a) => {
                            var n;
                            (n = e),
                                (e = document.createElement("li")),
                                J(e, v["progress-step"]),
                                Y(e, n),
                                (e = e),
                                o.appendChild(e),
                                a === t.currentProgressStep &&
                                    J(e, v["active-progress-step"]),
                                a !== t.progressSteps.length - 1 &&
                                    ((a = ((e) => {
                                        const t = document.createElement("li");
                                        return (
                                            J(t, v["progress-step-line"]),
                                            e.progressStepsDistance &&
                                                (t.style.width =
                                                    e.progressStepsDistance),
                                            t
                                        );
                                    })(t)),
                                    o.appendChild(a));
                        });
                })(0, t),
                ((e, t) => {
                    var o = Ce.innerParams.get(e);
                    e = B();
                    o && t.icon === o.icon
                        ? (ze(e, t), je(e, t))
                        : t.icon || t.iconHtml
                        ? t.icon && -1 === Object.keys(k).indexOf(t.icon)
                            ? (n(
                                  'Unknown icon! Expected "success", "error", "warning", "info" or "question", got "'.concat(
                                      t.icon,
                                      '"'
                                  )
                              ),
                              oe(e))
                            : (te(e),
                              ze(e, t),
                              je(e, t),
                              J(e, t.showClass.icon))
                        : oe(e);
                })(e, t),
                ((e, t) => {
                    const o = S();
                    if (!t.imageUrl) return oe(o);
                    te(o, ""),
                        o.setAttribute("src", t.imageUrl),
                        o.setAttribute("alt", t.imageAlt),
                        ee(o, "width", t.imageWidth),
                        ee(o, "height", t.imageHeight),
                        (o.className = v.image),
                        $(o, t, "image");
                })(0, t),
                ((e, t) => {
                    const o = E();
                    ne(o, t.title || t.titleText, "block"),
                        t.title && ye(t.title, o),
                        t.titleText && (o.innerText = t.titleText),
                        $(o, t, "title");
                })(0, t),
                ((e, t) => {
                    const o = V();
                    Y(o, t.closeButtonHtml),
                        $(o, t, "closeButton"),
                        ne(o, t.showCloseButton),
                        o.setAttribute("aria-label", t.closeButtonAriaLabel);
                })(0, t),
                Le(e, t),
                ((e, t) => {
                    var o,
                        a,
                        n,
                        s,
                        i,
                        r = D(),
                        l = q();
                    (t.showConfirmButton ||
                        t.showDenyButton ||
                        t.showCancelButton
                        ? te
                        : oe)(r),
                        $(r, t, "actions"),
                        (o = r),
                        (a = l),
                        (n = t),
                        (s = O()),
                        (i = z()),
                        (r = M()),
                        xe(s, "confirm", n),
                        xe(i, "deny", n),
                        xe(r, "cancel", n),
                        (function (e, t, o, a) {
                            if (!a.buttonsStyling)
                                return G([e, t, o], v.styled);
                            J([e, t, o], v.styled),
                                a.confirmButtonColor &&
                                    ((e.style.backgroundColor =
                                        a.confirmButtonColor),
                                    J(e, v["default-outline"])),
                                a.denyButtonColor &&
                                    ((t.style.backgroundColor =
                                        a.denyButtonColor),
                                    J(t, v["default-outline"])),
                                a.cancelButtonColor &&
                                    ((o.style.backgroundColor =
                                        a.cancelButtonColor),
                                    J(o, v["default-outline"]));
                        })(s, i, r, n),
                        n.reverseButtons &&
                            (n.toast
                                ? (o.insertBefore(r, s), o.insertBefore(i, s))
                                : (o.insertBefore(r, a),
                                  o.insertBefore(i, a),
                                  o.insertBefore(s, a))),
                        Y(l, t.loaderHtml),
                        $(l, t, "loader");
                })(0, t),
                ((e, t) => {
                    var o = H();
                    ne(o, t.footer),
                        t.footer && ye(t.footer, o),
                        $(o, t, "footer");
                })(0, t),
                "function" == typeof t.didRender && t.didRender(P());
        },
        He = Object.freeze({
            cancel: "cancel",
            backdrop: "backdrop",
            close: "close",
            esc: "esc",
            timer: "timer",
        }),
        Ie = () => {
            o(document.body.children).forEach((e) => {
                e === x() ||
                    e.contains(x()) ||
                    (e.hasAttribute("aria-hidden") &&
                        e.setAttribute(
                            "data-previous-aria-hidden",
                            e.getAttribute("aria-hidden")
                        ),
                    e.setAttribute("aria-hidden", "true"));
            });
        },
        Ve = () => {
            o(document.body.children).forEach((e) => {
                e.hasAttribute("data-previous-aria-hidden")
                    ? (e.setAttribute(
                          "aria-hidden",
                          e.getAttribute("data-previous-aria-hidden")
                      ),
                      e.removeAttribute("data-previous-aria-hidden"))
                    : e.removeAttribute("aria-hidden");
            });
        },
        Ne = ["swal-title", "swal-html", "swal-footer"],
        Ze = (e) => {
            const a = {};
            return (
                o(e.querySelectorAll("swal-button")).forEach((e) => {
                    Re(e, ["type", "color", "aria-label"]);
                    var o = e.getAttribute("type");
                    (a["".concat(o, "ButtonText")] = e.innerHTML),
                        (a["show".concat(t(o), "Button")] = !0),
                        e.hasAttribute("color") &&
                            (a["".concat(o, "ButtonColor")] =
                                e.getAttribute("color")),
                        e.hasAttribute("aria-label") &&
                            (a["".concat(o, "ButtonAriaLabel")] =
                                e.getAttribute("aria-label"));
                }),
                a
            );
        },
        Re = (e, t) => {
            o(e.attributes).forEach((o) => {
                -1 === t.indexOf(o.name) &&
                    a([
                        'Unrecognized attribute "'
                            .concat(o.name, '" on <')
                            .concat(e.tagName.toLowerCase(), ">."),
                        "".concat(
                            t.length
                                ? "Allowed attributes are: ".concat(
                                      t.join(", ")
                                  )
                                : "To set the value, use HTML within the element."
                        ),
                    ]);
            });
        };
    var Fe = {
        email: (e, t) =>
            /^[a-zA-Z0-9.+_-]+@[a-zA-Z0-9.-]+\.[a-zA-Z0-9-]{2,24}$/.test(e)
                ? Promise.resolve()
                : Promise.resolve(t || "Invalid email address"),
        url: (e, t) =>
            /^https?:\/\/(www\.)?[-a-zA-Z0-9@:%._+~#=]{1,256}\.[a-z]{2,63}\b([-a-zA-Z0-9@:%_+.~#?&/=]*)$/.test(
                e
            )
                ? Promise.resolve()
                : Promise.resolve(t || "Invalid URL"),
    };
    class Ue {
        constructor(e, t) {
            (this.callback = e),
                (this.remaining = t),
                (this.running = !1),
                this.start();
        }
        start() {
            return (
                this.running ||
                    ((this.running = !0),
                    (this.started = new Date()),
                    (this.id = setTimeout(this.callback, this.remaining))),
                this.remaining
            );
        }
        stop() {
            return (
                this.running &&
                    ((this.running = !1),
                    clearTimeout(this.id),
                    (this.remaining -=
                        new Date().getTime() - this.started.getTime())),
                this.remaining
            );
        }
        increase(e) {
            var t = this.running;
            return (
                t && this.stop(),
                (this.remaining += e),
                t && this.start(),
                this.remaining
            );
        }
        getTimerLeft() {
            return this.running && (this.stop(), this.start()), this.remaining;
        }
        isRunning() {
            return this.running;
        }
    }
    const Ye = () => {
            null !== U.previousBodyPadding &&
                ((document.body.style.paddingRight = "".concat(
                    U.previousBodyPadding,
                    "px"
                )),
                (U.previousBodyPadding = null));
        },
        We = (e) => {
            var t,
                o = e.target,
                a = x();
            return !(
                ((t = e).touches &&
                    t.touches.length &&
                    "stylus" === t.touches[0].touchType) ||
                ((e = e).touches && 1 < e.touches.length) ||
                (o !== a &&
                    (re(a) ||
                        "INPUT" === o.tagName ||
                        "TEXTAREA" === o.tagName ||
                        (re(T()) && T().contains(o))))
            );
        },
        $e = () => {
            var e;
            W(document.body, v.iosfix) &&
                ((e = parseInt(document.body.style.top, 10)),
                G(document.body, v.iosfix),
                (document.body.style.top = ""),
                (document.body.scrollTop = -1 * e));
        },
        _e = (e) => {
            const t = P();
            if (e.target === t) {
                const e = x();
                t.removeEventListener(ke, _e), (e.style.overflowY = "auto");
            }
        },
        Ke = (e, t, o) => {
            (() => {
                var e;
                ((/iPad|iPhone|iPod/.test(navigator.userAgent) &&
                    !window.MSStream) ||
                    ("MacIntel" === navigator.platform &&
                        1 < navigator.maxTouchPoints)) &&
                    !W(document.body, v.iosfix) &&
                    ((e = document.body.scrollTop),
                    (document.body.style.top = "".concat(-1 * e, "px")),
                    J(document.body, v.iosfix),
                    (() => {
                        const e = x();
                        let t;
                        (e.ontouchstart = (e) => {
                            t = We(e);
                        }),
                            (e.ontouchmove = (e) => {
                                t && (e.preventDefault(), e.stopPropagation());
                            });
                    })(),
                    (() => {
                        const e = navigator.userAgent,
                            t = !!e.match(/iPad/i) || !!e.match(/iPhone/i),
                            o = !!e.match(/WebKit/i);
                        if (t && o && !e.match(/CriOS/i)) {
                            const e = 44;
                            P().scrollHeight > window.innerHeight - e &&
                                (x().style.paddingBottom = "".concat(e, "px"));
                        }
                    })());
            })(),
                t &&
                    "hidden" !== o &&
                    null === U.previousBodyPadding &&
                    document.body.scrollHeight > window.innerHeight &&
                    ((U.previousBodyPadding = parseInt(
                        window
                            .getComputedStyle(document.body)
                            .getPropertyValue("padding-right")
                    )),
                    (document.body.style.paddingRight = "".concat(
                        U.previousBodyPadding +
                            (() => {
                                const e = document.createElement("div");
                                (e.className = v["scrollbar-measure"]),
                                    document.body.appendChild(e);
                                var t =
                                    e.getBoundingClientRect().width -
                                    e.clientWidth;
                                return document.body.removeChild(e), t;
                            })(),
                        "px"
                    ))),
                setTimeout(() => {
                    e.scrollTop = 0;
                });
        },
        Xe = (e) => {
            let t = P();
            t || new Zt(), (t = P());
            var o = q();
            R()
                ? oe(B())
                : ((e, t) => {
                      const o = D(),
                          a = q();
                      !t && se(O()) && (t = O()),
                          te(o),
                          t &&
                              (oe(t),
                              a.setAttribute(
                                  "data-button-to-replace",
                                  t.className
                              )),
                          a.parentNode.insertBefore(a, t),
                          J([e, o], v.loading);
                  })(t, e),
                te(o),
                t.setAttribute("data-loading", !0),
                t.setAttribute("aria-busy", !0),
                t.focus();
        },
        Je = (e, t) => {
            const o = P(),
                a = (e) => Qe[t.input](o, et(e), t);
            l(t.inputOptions) || d(t.inputOptions)
                ? (Xe(O()),
                  c(t.inputOptions).then((t) => {
                      e.hideLoading(), a(t);
                  }))
                : "object" == typeof t.inputOptions
                ? a(t.inputOptions)
                : n(
                      "Unexpected type of inputOptions! Expected object, Map or Promise, got ".concat(
                          typeof t.inputOptions
                      )
                  );
        },
        Ge = (e, t) => {
            const o = e.getInput();
            oe(o),
                c(t.inputValue)
                    .then((a) => {
                        (o.value =
                            "number" === t.input
                                ? parseFloat(a) || 0
                                : "".concat(a)),
                            te(o),
                            o.focus(),
                            e.hideLoading();
                    })
                    .catch((t) => {
                        n("Error in inputValue promise: ".concat(t)),
                            (o.value = ""),
                            te(o),
                            o.focus(),
                            e.hideLoading();
                    });
        },
        Qe = {
            select: (e, t, o) => {
                const a = Q(e, v.select),
                    n = (e, t, a) => {
                        const n = document.createElement("option");
                        (n.value = a),
                            Y(n, t),
                            (n.selected = tt(a, o.inputValue)),
                            e.appendChild(n);
                    };
                t.forEach((e) => {
                    var t = e[0];
                    const o = e[1];
                    if (Array.isArray(o)) {
                        const e = document.createElement("optgroup");
                        (e.label = t),
                            (e.disabled = !1),
                            a.appendChild(e),
                            o.forEach((t) => n(e, t[1], t[0]));
                    } else n(a, o, t);
                }),
                    a.focus();
            },
            radio: (e, t, o) => {
                const a = Q(e, v.radio);
                t.forEach((e) => {
                    var t = e[0];
                    e = e[1];
                    const n = document.createElement("input"),
                        s = document.createElement("label");
                    (n.type = "radio"),
                        (n.name = v.radio),
                        (n.value = t),
                        tt(t, o.inputValue) && (n.checked = !0);
                    const i = document.createElement("span");
                    Y(i, e),
                        (i.className = v.label),
                        s.appendChild(n),
                        s.appendChild(i),
                        a.appendChild(s);
                });
                const n = a.querySelectorAll("input");
                n.length && n[0].focus();
            },
        },
        et = (e) => {
            const t = [];
            return (
                "undefined" != typeof Map && e instanceof Map
                    ? e.forEach((e, o) => {
                          let a = e;
                          "object" == typeof a && (a = et(a)), t.push([o, a]);
                      })
                    : Object.keys(e).forEach((o) => {
                          let a = e[o];
                          "object" == typeof a && (a = et(a)), t.push([o, a]);
                      }),
                t
            );
        },
        tt = (e, t) => t && t.toString() === e.toString(),
        ot = (e, t) => {
            var o = Ce.innerParams.get(e),
                a = ((e, t) => {
                    const o = e.getInput();
                    if (!o) return null;
                    switch (t.input) {
                        case "checkbox":
                            return o.checked ? 1 : 0;
                        case "radio":
                            return (a = o).checked ? a.value : null;
                        case "file":
                            return (a = o).files.length
                                ? null !== a.getAttribute("multiple")
                                    ? a.files
                                    : a.files[0]
                                : null;
                        default:
                            return t.inputAutoTrim ? o.value.trim() : o.value;
                    }
                    var a;
                })(e, o);
            o.inputValidator
                ? ((e, t, o) => {
                      const a = Ce.innerParams.get(e);
                      e.disableInput(),
                          Promise.resolve()
                              .then(() =>
                                  c(a.inputValidator(t, a.validationMessage))
                              )
                              .then((a) => {
                                  e.enableButtons(),
                                      e.enableInput(),
                                      a
                                          ? e.showValidationMessage(a)
                                          : "deny" === o
                                          ? at(e, t)
                                          : it(e, t);
                              });
                  })(e, a, t)
                : e.getInput().checkValidity()
                ? ("deny" === t ? at : it)(e, a)
                : (e.enableButtons(),
                  e.showValidationMessage(o.validationMessage));
        },
        at = (e, t) => {
            const o = Ce.innerParams.get(e || void 0);
            if ((o.showLoaderOnDeny && Xe(z()), o.preDeny)) {
                Ce.awaitingPromise.set(e || void 0, !0),
                    Promise.resolve()
                        .then(() => c(o.preDeny(t, o.validationMessage)))
                        .then((o) => {
                            !1 === o
                                ? e.hideLoading()
                                : e.closePopup({
                                      isDenied: !0,
                                      value: void 0 === o ? t : o,
                                  });
                        })
                        .catch((t) => st(e || void 0, t));
            } else e.closePopup({ isDenied: !0, value: t });
        },
        nt = (e, t) => {
            e.closePopup({ isConfirmed: !0, value: t });
        },
        st = (e, t) => {
            e.rejectPromise(t);
        },
        it = (e, t) => {
            const o = Ce.innerParams.get(e || void 0);
            if ((o.showLoaderOnConfirm && Xe(), o.preConfirm)) {
                e.resetValidationMessage(),
                    Ce.awaitingPromise.set(e || void 0, !0),
                    Promise.resolve()
                        .then(() => c(o.preConfirm(t, o.validationMessage)))
                        .then((o) => {
                            se(j()) || !1 === o
                                ? e.hideLoading()
                                : nt(e, void 0 === o ? t : o);
                        })
                        .catch((t) => st(e || void 0, t));
            } else nt(e, t);
        };
    let rt = !1;
    const lt = (e, t, o) => {
            t.container.onclick = (a) => {
                var n = Ce.innerParams.get(e);
                rt
                    ? (rt = !1)
                    : a.target === t.container &&
                      r(n.allowOutsideClick) &&
                      o(He.backdrop);
            };
        },
        ct = () => O() && O().click(),
        dt = (e, t, o) => {
            const a = N();
            if (a.length)
                return (
                    (t += o) === a.length
                        ? (t = 0)
                        : -1 === t && (t = a.length - 1),
                    a[t].focus()
                );
            P().focus();
        },
        ut = ["ArrowRight", "ArrowDown"],
        mt = ["ArrowLeft", "ArrowUp"],
        pt = (e, t, o) => {
            var a,
                n,
                s = Ce.innerParams.get(e);
            s &&
                (s.stopKeydownPropagation && t.stopPropagation(),
                "Enter" === t.key
                    ? ((a = e),
                      (n = s),
                      (e = t).isComposing ||
                          (e.target &&
                              a.getInput() &&
                              e.target.outerHTML === a.getInput().outerHTML &&
                              (["textarea", "file"].includes(n.input) ||
                                  (ct(), e.preventDefault()))))
                    : "Tab" === t.key
                    ? ((e, t) => {
                          const o = e.target,
                              a = N();
                          let n = -1;
                          for (let e = 0; e < a.length; e++)
                              if (o === a[e]) {
                                  n = e;
                                  break;
                              }
                          e.shiftKey ? dt(0, n, -1) : dt(0, n, 1),
                              e.stopPropagation(),
                              e.preventDefault();
                      })(t)
                    : [...ut, ...mt].includes(t.key)
                    ? ((e) => {
                          if (
                              [O(), z(), M()].includes(document.activeElement)
                          ) {
                              var t = ut.includes(e)
                                  ? "nextElementSibling"
                                  : "previousElementSibling";
                              const o = document.activeElement[t];
                              o instanceof HTMLElement && o.focus();
                          }
                      })(t.key)
                    : "Escape" === t.key &&
                      ((e, t, o) => {
                          r(s.allowEscapeKey) &&
                              (e.preventDefault(), o(He.esc));
                      })(t, 0, o));
        },
        wt = (e) =>
            e instanceof Element ||
            ((e) => "object" == typeof e && e.jquery)(e),
        gt = () => {
            if (de.timeout)
                return (
                    (() => {
                        const e = I();
                        var t = parseInt(window.getComputedStyle(e).width);
                        e.style.removeProperty("transition"),
                            (e.style.width = "100%"),
                            (t =
                                (t /
                                    parseInt(
                                        window.getComputedStyle(e).width
                                    )) *
                                100),
                            e.style.removeProperty("transition"),
                            (e.style.width = "".concat(t, "%"));
                    })(),
                    de.timeout.stop()
                );
        },
        ht = () => {
            if (de.timeout) {
                var e = de.timeout.start();
                return F(e), e;
            }
        };
    let ft = !1;
    const bt = {},
        yt = (e) => {
            for (let o = e.target; o && o !== document; o = o.parentNode)
                for (const e in bt) {
                    var t = o.getAttribute(e);
                    if (t) return void bt[e].fire({ template: t });
                }
        };
    var vt = Object.freeze({
        isValidParameter: g,
        isUpdatableParameter: h,
        isDeprecatedParameter: f,
        argsToParams: (e) => {
            const t = {};
            return (
                "object" != typeof e[0] || wt(e[0])
                    ? ["title", "html", "icon"].forEach((o, a) => {
                          "string" == typeof (a = e[a]) || wt(a)
                              ? (t[o] = a)
                              : void 0 !== a &&
                                n(
                                    "Unexpected type of "
                                        .concat(
                                            o,
                                            '! Expected "string" or "Element", got '
                                        )
                                        .concat(typeof a)
                                );
                      })
                    : Object.assign(t, e[0]),
                t
            );
        },
        isVisible: () => se(P()),
        clickConfirm: ct,
        clickDeny: () => z() && z().click(),
        clickCancel: () => M() && M().click(),
        getContainer: x,
        getPopup: P,
        getTitle: E,
        getHtmlContainer: T,
        getImage: S,
        getIcon: B,
        getInputLabel: () => A(v["input-label"]),
        getCloseButton: V,
        getActions: D,
        getConfirmButton: O,
        getDenyButton: z,
        getCancelButton: M,
        getLoader: q,
        getFooter: H,
        getTimerProgressBar: I,
        getFocusableElements: N,
        getValidationMessage: j,
        isLoading: () => P().hasAttribute("data-loading"),
        fire: function () {
            for (var e = arguments.length, t = new Array(e), o = 0; o < e; o++)
                t[o] = arguments[o];
            return new this(...t);
        },
        mixin: function (e) {
            return class extends this {
                _main(t, o) {
                    return super._main(t, Object.assign({}, e, o));
                }
            };
        },
        showLoading: Xe,
        enableLoading: Xe,
        getTimerLeft: () => de.timeout && de.timeout.getTimerLeft(),
        stopTimer: gt,
        resumeTimer: ht,
        toggleTimer: () => {
            var e = de.timeout;
            return e && (e.running ? gt : ht)();
        },
        increaseTimer: (e) => {
            if (de.timeout) return F((e = de.timeout.increase(e)), !0), e;
        },
        isTimerRunning: () => de.timeout && de.timeout.isRunning(),
        bindClickHandler: function () {
            var e =
                0 < arguments.length && void 0 !== arguments[0]
                    ? arguments[0]
                    : "data-swal-template";
            (bt[e] = this),
                ft || (document.body.addEventListener("click", yt), (ft = !0));
        },
    });
    function kt() {
        var e = Ce.innerParams.get(this);
        if (e) {
            const t = Ce.domCache.get(this);
            oe(t.loader),
                R()
                    ? e.icon && te(B())
                    : ((e) => {
                          const t = e.popup.getElementsByClassName(
                              e.loader.getAttribute("data-button-to-replace")
                          );
                          t.length
                              ? te(t[0], "inline-block")
                              : ie() && oe(e.actions);
                      })(t),
                G([t.popup, t.actions], v.loading),
                t.popup.removeAttribute("aria-busy"),
                t.popup.removeAttribute("data-loading"),
                (t.confirmButton.disabled = !1),
                (t.denyButton.disabled = !1),
                (t.cancelButton.disabled = !1);
        }
    }
    var xt = {
        swalPromiseResolve: new WeakMap(),
        swalPromiseReject: new WeakMap(),
    };
    function Ct(e, t, o, a) {
        R()
            ? Et(e, a)
            : (ue(o).then(() => Et(e, a)),
              de.keydownTarget.removeEventListener(
                  "keydown",
                  de.keydownHandler,
                  { capture: de.keydownListenerCapture }
              ),
              (de.keydownHandlerAdded = !1)),
            /^((?!chrome|android).)*safari/i.test(navigator.userAgent)
                ? (t.setAttribute("style", "display:none !important"),
                  t.removeAttribute("class"),
                  (t.innerHTML = ""))
                : t.remove(),
            Z() && (Ye(), $e(), Ve()),
            G(
                [document.documentElement, document.body],
                [v.shown, v["height-auto"], v["no-backdrop"], v["toast-shown"]]
            );
    }
    function At(e) {
        e =
            void 0 !== (o = e)
                ? Object.assign(
                      { isConfirmed: !1, isDenied: !1, isDismissed: !1 },
                      o
                  )
                : { isConfirmed: !1, isDenied: !1, isDismissed: !0 };
        const t = xt.swalPromiseResolve.get(this);
        var o = ((e) => {
            const t = P();
            if (!t) return !1;
            const o = Ce.innerParams.get(e);
            if (!o || W(t, o.hideClass.popup)) return !1;
            G(t, o.showClass.popup), J(t, o.hideClass.popup);
            const a = x();
            return (
                G(a, o.showClass.backdrop),
                J(a, o.hideClass.backdrop),
                Bt(e, t, o),
                !0
            );
        })(this);
        this.isAwaitingPromise()
            ? e.isDismissed || (Pt(this), t(e))
            : o && t(e);
    }
    const Pt = (e) => {
            e.isAwaitingPromise() &&
                (Ce.awaitingPromise.delete(e),
                Ce.innerParams.get(e) || e._destroy());
        },
        Bt = (e, t, o) => {
            var a,
                n,
                s,
                i = x(),
                r = ke && le(t);
            "function" == typeof o.willClose && o.willClose(t),
                r
                    ? ((a = e),
                      (n = t),
                      (s = i),
                      (r = o.returnFocus),
                      (t = o.didClose),
                      (de.swalCloseEventFinishedCallback = Ct.bind(
                          null,
                          a,
                          s,
                          r,
                          t
                      )),
                      n.addEventListener(ke, function (e) {
                          e.target === n &&
                              (de.swalCloseEventFinishedCallback(),
                              delete de.swalCloseEventFinishedCallback);
                      }))
                    : Ct(e, i, o.returnFocus, o.didClose);
        },
        Et = (e, t) => {
            setTimeout(() => {
                "function" == typeof t && t.bind(e.params)(), e._destroy();
            });
        };
    function Tt(e, t, o) {
        const a = Ce.domCache.get(e);
        t.forEach((e) => {
            a[e].disabled = o;
        });
    }
    function St(e, t) {
        if (!e) return !1;
        if ("radio" === e.type) {
            const o = e.parentNode.parentNode.querySelectorAll("input");
            for (let e = 0; e < o.length; e++) o[e].disabled = t;
        } else e.disabled = t;
    }
    const Lt = (e) => {
            e.isAwaitingPromise()
                ? (jt(Ce, e), Ce.awaitingPromise.set(e, !0))
                : (jt(xt, e), jt(Ce, e));
        },
        jt = (e, t) => {
            for (const o in e) e[o].delete(t);
        };
    let Ot;
    y = Object.freeze({
        hideLoading: kt,
        disableLoading: kt,
        getInput: function (e) {
            var t = Ce.innerParams.get(e || this);
            return (e = Ce.domCache.get(e || this))
                ? _(e.popup, t.input)
                : null;
        },
        close: At,
        isAwaitingPromise: function () {
            return !!Ce.awaitingPromise.get(this);
        },
        rejectPromise: function (e) {
            const t = xt.swalPromiseReject.get(this);
            Pt(this), t && t(e);
        },
        closePopup: At,
        closeModal: At,
        closeToast: At,
        enableButtons: function () {
            Tt(this, ["confirmButton", "denyButton", "cancelButton"], !1);
        },
        disableButtons: function () {
            Tt(this, ["confirmButton", "denyButton", "cancelButton"], !0);
        },
        enableInput: function () {
            return St(this.getInput(), !1);
        },
        disableInput: function () {
            return St(this.getInput(), !0);
        },
        showValidationMessage: function (e) {
            const t = Ce.domCache.get(this);
            var o = Ce.innerParams.get(this);
            Y(t.validationMessage, e),
                (t.validationMessage.className = v["validation-message"]),
                o.customClass &&
                    o.customClass.validationMessage &&
                    J(t.validationMessage, o.customClass.validationMessage),
                te(t.validationMessage);
            const a = this.getInput();
            a &&
                (a.setAttribute("aria-invalid", !0),
                a.setAttribute("aria-describedby", v["validation-message"]),
                K(a),
                J(a, v.inputerror));
        },
        resetValidationMessage: function () {
            var e = Ce.domCache.get(this);
            e.validationMessage && oe(e.validationMessage);
            const t = this.getInput();
            t &&
                (t.removeAttribute("aria-invalid"),
                t.removeAttribute("aria-describedby"),
                G(t, v.inputerror));
        },
        getProgressSteps: function () {
            return Ce.domCache.get(this).progressSteps;
        },
        update: function (e) {
            var t = P(),
                o = Ce.innerParams.get(this);
            if (!t || W(t, o.hideClass.popup))
                return a(
                    "You're trying to update the closed or closing popup, that won't work. Use the update() method in preConfirm parameter or show a new popup."
                );
            const n = {};
            Object.keys(e).forEach((t) => {
                h(t)
                    ? (n[t] = e[t])
                    : a(
                          'Invalid parameter to update: "'.concat(
                              t,
                              '". Updatable params are listed here: https://github.com/sweetalert2/sweetalert2/blob/master/src/utils/params.js\n\nIf you think this parameter should be updatable, request it here: https://github.com/sweetalert2/sweetalert2/issues/new?template=02_feature_request.md'
                          )
                      );
            }),
                (o = Object.assign({}, o, n)),
                De(this, o),
                Ce.innerParams.set(this, o),
                Object.defineProperties(this, {
                    params: {
                        value: Object.assign({}, this.params, e),
                        writable: !1,
                        enumerable: !0,
                    },
                });
        },
        _destroy: function () {
            var e = Ce.domCache.get(this);
            const t = Ce.innerParams.get(this);
            t
                ? (e.popup &&
                      de.swalCloseEventFinishedCallback &&
                      (de.swalCloseEventFinishedCallback(),
                      delete de.swalCloseEventFinishedCallback),
                  de.deferDisposalTimer &&
                      (clearTimeout(de.deferDisposalTimer),
                      delete de.deferDisposalTimer),
                  "function" == typeof t.didDestroy && t.didDestroy(),
                  Lt((e = this)),
                  delete e.params,
                  delete de.keydownHandler,
                  delete de.keydownTarget,
                  delete de.currentInstance)
                : Lt(this);
        },
    });
    class zt {
        constructor() {
            if ("undefined" != typeof window) {
                Ot = this;
                for (
                    var e = arguments.length, t = new Array(e), o = 0;
                    o < e;
                    o++
                )
                    t[o] = arguments[o];
                var a = Object.freeze(this.constructor.argsToParams(t));
                Object.defineProperties(this, {
                    params: {
                        value: a,
                        writable: !1,
                        enumerable: !0,
                        configurable: !0,
                    },
                }),
                    (a = this._main(this.params)),
                    Ce.promise.set(this, a);
            }
        }
        _main(e) {
            var t =
                1 < arguments.length && void 0 !== arguments[1]
                    ? arguments[1]
                    : {};
            return (
                b(Object.assign({}, t, e)),
                de.currentInstance &&
                    (de.currentInstance._destroy(), Z() && Ve()),
                (de.currentInstance = this),
                (function (e) {
                    var t, o;
                    (t = e).inputValidator ||
                        Object.keys(Fe).forEach((e) => {
                            t.input === e && (t.inputValidator = Fe[e]);
                        }),
                        e.showLoaderOnConfirm &&
                            !e.preConfirm &&
                            a(
                                "showLoaderOnConfirm is set to true, but preConfirm is not defined.\nshowLoaderOnConfirm should be used together with preConfirm, see usage example:\nhttps://sweetalert2.github.io/#ajax-request"
                            ),
                        ((o = e).target &&
                            ("string" != typeof o.target ||
                                document.querySelector(o.target)) &&
                            ("string" == typeof o.target ||
                                o.target.appendChild)) ||
                            (a(
                                'Target parameter is not valid, defaulting to "body"'
                            ),
                            (o.target = "body")),
                        "string" == typeof e.title &&
                            (e.title = e.title.split("\n").join("<br />")),
                        ((e) => {
                            var t = pe();
                            if (ce())
                                n(
                                    "SweetAlert2 requires document to initialize"
                                );
                            else {
                                const o = document.createElement("div");
                                (o.className = v.container),
                                    t && J(o, v["no-transition"]),
                                    Y(o, me);
                                const a = he(e.target);
                                a.appendChild(o), fe(e), be(a), ge();
                            }
                        })(e);
                })((e = Mt(e, t))),
                Object.freeze(e),
                de.timeout && (de.timeout.stop(), delete de.timeout),
                clearTimeout(de.restoreFocusTimeout),
                (t = Dt(this)),
                De(this, e),
                Ce.innerParams.set(this, e),
                qt(this, t, e)
            );
        }
        then(e) {
            return Ce.promise.get(this).then(e);
        }
        finally(e) {
            return Ce.promise.get(this).finally(e);
        }
    }
    const qt = (e, t, o) =>
            new Promise((a, n) => {
                const s = (t) => {
                    e.closePopup({ isDismissed: !0, dismiss: t });
                };
                var i, r, c;
                xt.swalPromiseResolve.set(e, a),
                    xt.swalPromiseReject.set(e, n),
                    (t.confirmButton.onclick = () =>
                        ((e) => {
                            var t = Ce.innerParams.get(e);
                            e.disableButtons(),
                                t.input ? ot(e, "confirm") : it(e, !0);
                        })(e)),
                    (t.denyButton.onclick = () =>
                        ((e) => {
                            var t = Ce.innerParams.get(e);
                            e.disableButtons(),
                                t.returnInputValueOnDeny
                                    ? ot(e, "deny")
                                    : at(e, !1);
                        })(e)),
                    (t.cancelButton.onclick = () =>
                        ((t, o) => {
                            e.disableButtons(), o(He.cancel);
                        })(0, s)),
                    (t.closeButton.onclick = () => s(He.close)),
                    (i = e),
                    (a = t),
                    (n = s),
                    Ce.innerParams.get(i).toast
                        ? ((e, t, o) => {
                              t.popup.onclick = () => {
                                  var t,
                                      a = Ce.innerParams.get(e);
                                  (a &&
                                      ((t = a).showConfirmButton ||
                                          t.showDenyButton ||
                                          t.showCancelButton ||
                                          t.showCloseButton ||
                                          a.timer ||
                                          a.input)) ||
                                      o(He.close);
                              };
                          })(i, a, n)
                        : (((e) => {
                              e.popup.onmousedown = () => {
                                  e.container.onmouseup = function (t) {
                                      (e.container.onmouseup = void 0),
                                          t.target === e.container && (rt = !0);
                                  };
                              };
                          })(a),
                          ((e) => {
                              e.container.onmousedown = () => {
                                  e.popup.onmouseup = function (t) {
                                      (e.popup.onmouseup = void 0),
                                          (t.target !== e.popup &&
                                              !e.popup.contains(t.target)) ||
                                              (rt = !0);
                                  };
                              };
                          })(a),
                          lt(i, a, n)),
                    (r = e),
                    (n = o),
                    (c = s),
                    (a = de).keydownTarget &&
                        a.keydownHandlerAdded &&
                        (a.keydownTarget.removeEventListener(
                            "keydown",
                            a.keydownHandler,
                            { capture: a.keydownListenerCapture }
                        ),
                        (a.keydownHandlerAdded = !1)),
                    n.toast ||
                        ((a.keydownHandler = (e) => pt(r, e, c)),
                        (a.keydownTarget = n.keydownListenerCapture
                            ? window
                            : P()),
                        (a.keydownListenerCapture = n.keydownListenerCapture),
                        a.keydownTarget.addEventListener(
                            "keydown",
                            a.keydownHandler,
                            { capture: a.keydownListenerCapture }
                        ),
                        (a.keydownHandlerAdded = !0)),
                    (n = e),
                    "select" === (a = o).input || "radio" === a.input
                        ? Je(n, a)
                        : [
                              "text",
                              "email",
                              "number",
                              "tel",
                              "textarea",
                          ].includes(a.input) &&
                          (l(a.inputValue) || d(a.inputValue)) &&
                          (Xe(O()), Ge(n, a)),
                    ((e) => {
                        const t = x(),
                            o = P();
                        "function" == typeof e.willOpen && e.willOpen(o);
                        var a = window.getComputedStyle(
                            document.body
                        ).overflowY;
                        ((e, t, o) => {
                            J(e, o.showClass.backdrop),
                                t.style.setProperty(
                                    "opacity",
                                    "0",
                                    "important"
                                ),
                                te(t, "grid"),
                                setTimeout(() => {
                                    J(t, o.showClass.popup),
                                        t.style.removeProperty("opacity");
                                }, 10),
                                J(
                                    [document.documentElement, document.body],
                                    v.shown
                                ),
                                o.heightAuto &&
                                    o.backdrop &&
                                    !o.toast &&
                                    J(
                                        [
                                            document.documentElement,
                                            document.body,
                                        ],
                                        v["height-auto"]
                                    );
                        })(t, o, e),
                            setTimeout(() => {
                                ((e, t) => {
                                    ke && le(t)
                                        ? ((e.style.overflowY = "hidden"),
                                          t.addEventListener(ke, _e))
                                        : (e.style.overflowY = "auto");
                                })(t, o);
                            }, 10),
                            Z() && (Ke(t, e.scrollbarPadding, a), Ie()),
                            R() ||
                                de.previousActiveElement ||
                                (de.previousActiveElement =
                                    document.activeElement),
                            "function" == typeof e.didOpen &&
                                setTimeout(() => e.didOpen(o)),
                            G(t, v["no-transition"]);
                    })(o),
                    Ht(de, o, s),
                    It(t, o),
                    setTimeout(() => {
                        t.container.scrollTop = 0;
                    });
            }),
        Mt = (e, t) => {
            var n = ((e) =>
                (e =
                    "string" == typeof e.template
                        ? document.querySelector(e.template)
                        : e.template)
                    ? (((e) => {
                          const t = Ne.concat([
                              "swal-param",
                              "swal-button",
                              "swal-image",
                              "swal-icon",
                              "swal-input",
                              "swal-input-option",
                          ]);
                          o(e.children).forEach((e) => {
                              (e = e.tagName.toLowerCase()),
                                  -1 === t.indexOf(e) &&
                                      a(
                                          "Unrecognized element <".concat(
                                              e,
                                              ">"
                                          )
                                      );
                          });
                      })((e = e.content)),
                      Object.assign(
                          ((e) => {
                              const t = {};
                              return (
                                  o(e.querySelectorAll("swal-param")).forEach(
                                      (e) => {
                                          Re(e, ["name", "value"]);
                                          var o = e.getAttribute("name");
                                          (e = e.getAttribute("value")),
                                              "boolean" == typeof u[o] &&
                                                  "false" === e &&
                                                  (t[o] = !1),
                                              "object" == typeof u[o] &&
                                                  (t[o] = JSON.parse(e));
                                      }
                                  ),
                                  t
                              );
                          })(e),
                          Ze(e),
                          ((e) => {
                              const t = {},
                                  o = e.querySelector("swal-image");
                              return (
                                  o &&
                                      (Re(o, ["src", "width", "height", "alt"]),
                                      o.hasAttribute("src") &&
                                          (t.imageUrl = o.getAttribute("src")),
                                      o.hasAttribute("width") &&
                                          (t.imageWidth =
                                              o.getAttribute("width")),
                                      o.hasAttribute("height") &&
                                          (t.imageHeight =
                                              o.getAttribute("height")),
                                      o.hasAttribute("alt") &&
                                          (t.imageAlt = o.getAttribute("alt"))),
                                  t
                              );
                          })(e),
                          ((e) => {
                              const t = {},
                                  o = e.querySelector("swal-icon");
                              return (
                                  o &&
                                      (Re(o, ["type", "color"]),
                                      o.hasAttribute("type") &&
                                          (t.icon = o.getAttribute("type")),
                                      o.hasAttribute("color") &&
                                          (t.iconColor =
                                              o.getAttribute("color")),
                                      (t.iconHtml = o.innerHTML)),
                                  t
                              );
                          })(e),
                          ((e) => {
                              const t = {},
                                  a = e.querySelector("swal-input");
                              return (
                                  a &&
                                      (Re(a, [
                                          "type",
                                          "label",
                                          "placeholder",
                                          "value",
                                      ]),
                                      (t.input =
                                          a.getAttribute("type") || "text"),
                                      a.hasAttribute("label") &&
                                          (t.inputLabel =
                                              a.getAttribute("label")),
                                      a.hasAttribute("placeholder") &&
                                          (t.inputPlaceholder =
                                              a.getAttribute("placeholder")),
                                      a.hasAttribute("value") &&
                                          (t.inputValue =
                                              a.getAttribute("value"))),
                                  (e = e.querySelectorAll("swal-input-option"))
                                      .length &&
                                      ((t.inputOptions = {}),
                                      o(e).forEach((e) => {
                                          Re(e, ["value"]);
                                          var o = e.getAttribute("value");
                                          (e = e.innerHTML),
                                              (t.inputOptions[o] = e);
                                      })),
                                  t
                              );
                          })(e),
                          ((e, t) => {
                              const o = {};
                              for (const a in t) {
                                  const n = t[a],
                                      s = e.querySelector(n);
                                  s &&
                                      (Re(s, []),
                                      (o[n.replace(/^swal-/, "")] =
                                          s.innerHTML.trim()));
                              }
                              return o;
                          })(e, Ne)
                      ))
                    : {})(e);
            const s = Object.assign({}, u, t, n, e);
            return (
                (s.showClass = Object.assign({}, u.showClass, s.showClass)),
                (s.hideClass = Object.assign({}, u.hideClass, s.hideClass)),
                s
            );
        },
        Dt = (e) => {
            var t = {
                popup: P(),
                container: x(),
                actions: D(),
                confirmButton: O(),
                denyButton: z(),
                cancelButton: M(),
                loader: q(),
                closeButton: V(),
                validationMessage: j(),
                progressSteps: L(),
            };
            return Ce.domCache.set(e, t), t;
        },
        Ht = (e, t, o) => {
            var a = I();
            oe(a),
                t.timer &&
                    ((e.timeout = new Ue(() => {
                        o("timer"), delete e.timeout;
                    }, t.timer)),
                    t.timerProgressBar &&
                        (te(a),
                        setTimeout(() => {
                            e.timeout && e.timeout.running && F(t.timer);
                        })));
        },
        It = (e, t) => {
            if (!t.toast)
                return r(t.allowEnterKey)
                    ? void (Vt(e, t) || dt(0, -1, 1))
                    : Nt();
        },
        Vt = (e, t) =>
            t.focusDeny && se(e.denyButton)
                ? (e.denyButton.focus(), !0)
                : t.focusCancel && se(e.cancelButton)
                ? (e.cancelButton.focus(), !0)
                : !(
                      !t.focusConfirm ||
                      !se(e.confirmButton) ||
                      (e.confirmButton.focus(), 0)
                  ),
        Nt = () => {
            document.activeElement instanceof HTMLElement &&
                "function" == typeof document.activeElement.blur &&
                document.activeElement.blur();
        };
    Object.assign(zt.prototype, y),
        Object.assign(zt, vt),
        Object.keys(y).forEach((e) => {
            zt[e] = function () {
                if (Ot) return Ot[e](...arguments);
            };
        }),
        (zt.DismissReason = He),
        (zt.version = "11.3.4");
    const Zt = zt;
    return (Zt.default = Zt), Zt;
}),
    void 0 !== this &&
        this.Sweetalert2 &&
        (this.swal =
            this.sweetAlert =
            this.Swal =
            this.SweetAlert =
                this.Sweetalert2),
    "undefined" != typeof document &&
        (function (e, t) {
            var o = e.createElement("style");
            if (
                (e.getElementsByTagName("head")[0].appendChild(o), o.styleSheet)
            )
                o.styleSheet.disabled || (o.styleSheet.cssText = t);
            else
                try {
                    o.innerHTML = t;
                } catch (e) {
                    o.innerText = t;
                }
        })(
            document,
            '.swal2-popup.swal2-toast{box-sizing:border-box;grid-column:1/4!important;grid-row:1/4!important;grid-template-columns:1fr 99fr 1fr;padding:1em;overflow-y:hidden;background:#fff;box-shadow:0 0 1px rgba(0,0,0,.075),0 1px 2px rgba(0,0,0,.075),1px 2px 4px rgba(0,0,0,.075),1px 3px 8px rgba(0,0,0,.075),2px 4px 16px rgba(0,0,0,.075);pointer-events:all}.swal2-popup.swal2-toast>*{grid-column:2}.swal2-popup.swal2-toast .swal2-title{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-loading{justify-content:center}.swal2-popup.swal2-toast .swal2-input{height:2em;margin:.5em;font-size:1em}.swal2-popup.swal2-toast .swal2-validation-message{font-size:1em}.swal2-popup.swal2-toast .swal2-footer{margin:.5em 0 0;padding:.5em 0 0;font-size:.8em}.swal2-popup.swal2-toast .swal2-close{grid-column:3/3;grid-row:1/99;align-self:center;width:.8em;height:.8em;margin:0;font-size:2em}.swal2-popup.swal2-toast .swal2-html-container{margin:.5em 1em;padding:0;font-size:1em;text-align:initial}.swal2-popup.swal2-toast .swal2-html-container:empty{padding:0}.swal2-popup.swal2-toast .swal2-loader{grid-column:1;grid-row:1/99;align-self:center;width:2em;height:2em;margin:.25em}.swal2-popup.swal2-toast .swal2-icon{grid-column:1;grid-row:1/99;align-self:center;width:2em;min-width:2em;height:2em;margin:0 .5em 0 0}.swal2-popup.swal2-toast .swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:1.8em;font-weight:700}.swal2-popup.swal2-toast .swal2-icon.swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line]{top:.875em;width:1.375em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:.3125em}.swal2-popup.swal2-toast .swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:.3125em}.swal2-popup.swal2-toast .swal2-actions{justify-content:flex-start;height:auto;margin:0;margin-top:.5em;padding:0 .5em}.swal2-popup.swal2-toast .swal2-styled{margin:.25em .5em;padding:.4em .6em;font-size:1em}.swal2-popup.swal2-toast .swal2-success{border-color:#a5dc86}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line]{position:absolute;width:1.6em;height:3em;transform:rotate(45deg);border-radius:50%}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.8em;left:-.5em;transform:rotate(-45deg);transform-origin:2em 2em;border-radius:4em 0 0 4em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.25em;left:.9375em;transform-origin:0 1.5em;border-radius:0 4em 4em 0}.swal2-popup.swal2-toast .swal2-success .swal2-success-ring{width:2em;height:2em}.swal2-popup.swal2-toast .swal2-success .swal2-success-fix{top:0;left:.4375em;width:.4375em;height:2.6875em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line]{height:.3125em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=tip]{top:1.125em;left:.1875em;width:.75em}.swal2-popup.swal2-toast .swal2-success [class^=swal2-success-line][class$=long]{top:.9375em;right:.1875em;width:1.375em}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-toast-animate-success-line-tip .75s;animation:swal2-toast-animate-success-line-tip .75s}.swal2-popup.swal2-toast .swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-toast-animate-success-line-long .75s;animation:swal2-toast-animate-success-line-long .75s}.swal2-popup.swal2-toast.swal2-show{-webkit-animation:swal2-toast-show .5s;animation:swal2-toast-show .5s}.swal2-popup.swal2-toast.swal2-hide{-webkit-animation:swal2-toast-hide .1s forwards;animation:swal2-toast-hide .1s forwards}.swal2-container{display:grid;position:fixed;z-index:1060;top:0;right:0;bottom:0;left:0;box-sizing:border-box;grid-template-areas:"top-start     top            top-end" "center-start  center         center-end" "bottom-start  bottom-center  bottom-end";grid-template-rows:minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto) minmax(-webkit-min-content,auto);grid-template-rows:minmax(min-content,auto) minmax(min-content,auto) minmax(min-content,auto);height:100%;padding:.625em;overflow-x:hidden;transition:background-color .1s;-webkit-overflow-scrolling:touch}.swal2-container.swal2-backdrop-show,.swal2-container.swal2-noanimation{background:rgba(0,0,0,.4)}.swal2-container.swal2-backdrop-hide{background:0 0!important}.swal2-container.swal2-bottom-start,.swal2-container.swal2-center-start,.swal2-container.swal2-top-start{grid-template-columns:minmax(0,1fr) auto auto}.swal2-container.swal2-bottom,.swal2-container.swal2-center,.swal2-container.swal2-top{grid-template-columns:auto minmax(0,1fr) auto}.swal2-container.swal2-bottom-end,.swal2-container.swal2-center-end,.swal2-container.swal2-top-end{grid-template-columns:auto auto minmax(0,1fr)}.swal2-container.swal2-top-start>.swal2-popup{align-self:start}.swal2-container.swal2-top>.swal2-popup{grid-column:2;align-self:start;justify-self:center}.swal2-container.swal2-top-end>.swal2-popup,.swal2-container.swal2-top-right>.swal2-popup{grid-column:3;align-self:start;justify-self:end}.swal2-container.swal2-center-left>.swal2-popup,.swal2-container.swal2-center-start>.swal2-popup{grid-row:2;align-self:center}.swal2-container.swal2-center>.swal2-popup{grid-column:2;grid-row:2;align-self:center;justify-self:center}.swal2-container.swal2-center-end>.swal2-popup,.swal2-container.swal2-center-right>.swal2-popup{grid-column:3;grid-row:2;align-self:center;justify-self:end}.swal2-container.swal2-bottom-left>.swal2-popup,.swal2-container.swal2-bottom-start>.swal2-popup{grid-column:1;grid-row:3;align-self:end}.swal2-container.swal2-bottom>.swal2-popup{grid-column:2;grid-row:3;justify-self:center;align-self:end}.swal2-container.swal2-bottom-end>.swal2-popup,.swal2-container.swal2-bottom-right>.swal2-popup{grid-column:3;grid-row:3;align-self:end;justify-self:end}.swal2-container.swal2-grow-fullscreen>.swal2-popup,.swal2-container.swal2-grow-row>.swal2-popup{grid-column:1/4;width:100%}.swal2-container.swal2-grow-column>.swal2-popup,.swal2-container.swal2-grow-fullscreen>.swal2-popup{grid-row:1/4;align-self:stretch}.swal2-container.swal2-no-transition{transition:none!important}.swal2-popup{display:none;position:relative;box-sizing:border-box;grid-template-columns:minmax(0,100%);width:32em;max-width:100%;padding:0 0 1.25em;border:none;border-radius:5px;background:#fff;color:#545454;font-family:inherit;font-size:1rem}.swal2-popup:focus{outline:0}.swal2-popup.swal2-loading{overflow-y:hidden}.swal2-title{position:relative;max-width:100%;margin:0;padding:.8em 1em 0;color:inherit;font-size:1.875em;font-weight:600;text-align:center;text-transform:none;word-wrap:break-word}.swal2-actions{display:flex;z-index:1;box-sizing:border-box;flex-wrap:wrap;align-items:center;justify-content:center;width:auto;margin:1.25em auto 0;padding:0}.swal2-actions:not(.swal2-loading) .swal2-styled[disabled]{opacity:.4}.swal2-actions:not(.swal2-loading) .swal2-styled:hover{background-image:linear-gradient(rgba(0,0,0,.1),rgba(0,0,0,.1))}.swal2-actions:not(.swal2-loading) .swal2-styled:active{background-image:linear-gradient(rgba(0,0,0,.2),rgba(0,0,0,.2))}.swal2-loader{display:none;align-items:center;justify-content:center;width:2.2em;height:2.2em;margin:0 1.875em;-webkit-animation:swal2-rotate-loading 1.5s linear 0s infinite normal;animation:swal2-rotate-loading 1.5s linear 0s infinite normal;border-width:.25em;border-style:solid;border-radius:100%;border-color:#2778c4 transparent #2778c4 transparent}.swal2-styled{margin:.3125em;padding:.625em 1.1em;transition:box-shadow .1s;box-shadow:0 0 0 3px transparent;font-weight:500}.swal2-styled:not([disabled]){cursor:pointer}.swal2-styled.swal2-confirm{border:0;border-radius:.25em;background:initial;background-color:#7066e0;color:#fff;font-size:1em}.swal2-styled.swal2-confirm:focus{box-shadow:0 0 0 3px rgba(112,102,224,.5)}.swal2-styled.swal2-deny{border:0;border-radius:.25em;background:initial;background-color:#dc3741;color:#fff;font-size:1em}.swal2-styled.swal2-deny:focus{box-shadow:0 0 0 3px rgba(220,55,65,.5)}.swal2-styled.swal2-cancel{border:0;border-radius:.25em;background:initial;background-color:#6e7881;color:#fff;font-size:1em}.swal2-styled.swal2-cancel:focus{box-shadow:0 0 0 3px rgba(110,120,129,.5)}.swal2-styled.swal2-default-outline:focus{box-shadow:0 0 0 3px rgba(100,150,200,.5)}.swal2-styled:focus{outline:0}.swal2-styled::-moz-focus-inner{border:0}.swal2-footer{justify-content:center;margin:1em 0 0;padding:1em 1em 0;border-top:1px solid #eee;color:inherit;font-size:1em}.swal2-timer-progress-bar-container{position:absolute;right:0;bottom:0;left:0;grid-column:auto!important;height:.25em;overflow:hidden;border-bottom-right-radius:5px;border-bottom-left-radius:5px}.swal2-timer-progress-bar{width:100%;height:.25em;background:rgba(0,0,0,.2)}.swal2-image{max-width:100%;margin:2em auto 1em}.swal2-close{z-index:2;align-items:center;justify-content:center;width:1.2em;height:1.2em;margin-top:0;margin-right:0;margin-bottom:-1.2em;padding:0;overflow:hidden;transition:color .1s,box-shadow .1s;border:none;border-radius:5px;background:0 0;color:#ccc;font-family:serif;font-family:monospace;font-size:2.5em;cursor:pointer;justify-self:end}.swal2-close:hover{transform:none;background:0 0;color:#f27474}.swal2-close:focus{outline:0;box-shadow:inset 0 0 0 3px rgba(100,150,200,.5)}.swal2-close::-moz-focus-inner{border:0}.swal2-html-container{z-index:1;justify-content:center;margin:1em 1.6em .3em;padding:0;overflow:auto;color:inherit;font-size:1.125em;font-weight:400;line-height:normal;text-align:center;word-wrap:break-word;word-break:break-word}.swal2-checkbox,.swal2-file,.swal2-input,.swal2-radio,.swal2-select,.swal2-textarea{margin:1em 2em 3px}.swal2-file,.swal2-input,.swal2-textarea{box-sizing:border-box;width:auto;transition:border-color .1s,box-shadow .1s;border:1px solid #d9d9d9;border-radius:.1875em;background:inherit;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px transparent;color:inherit;font-size:1.125em}.swal2-file.swal2-inputerror,.swal2-input.swal2-inputerror,.swal2-textarea.swal2-inputerror{border-color:#f27474!important;box-shadow:0 0 2px #f27474!important}.swal2-file:focus,.swal2-input:focus,.swal2-textarea:focus{border:1px solid #b4dbed;outline:0;box-shadow:inset 0 1px 1px rgba(0,0,0,.06),0 0 0 3px rgba(100,150,200,.5)}.swal2-file::-moz-placeholder,.swal2-input::-moz-placeholder,.swal2-textarea::-moz-placeholder{color:#ccc}.swal2-file:-ms-input-placeholder,.swal2-input:-ms-input-placeholder,.swal2-textarea:-ms-input-placeholder{color:#ccc}.swal2-file::placeholder,.swal2-input::placeholder,.swal2-textarea::placeholder{color:#ccc}.swal2-range{margin:1em 2em 3px;background:#fff}.swal2-range input{width:80%}.swal2-range output{width:20%;color:inherit;font-weight:600;text-align:center}.swal2-range input,.swal2-range output{height:2.625em;padding:0;font-size:1.125em;line-height:2.625em}.swal2-input{height:2.625em;padding:0 .75em}.swal2-file{width:75%;margin-right:auto;margin-left:auto;background:inherit;font-size:1.125em}.swal2-textarea{height:6.75em;padding:.75em}.swal2-select{min-width:50%;max-width:100%;padding:.375em .625em;background:inherit;color:inherit;font-size:1.125em}.swal2-checkbox,.swal2-radio{align-items:center;justify-content:center;background:#fff;color:inherit}.swal2-checkbox label,.swal2-radio label{margin:0 .6em;font-size:1.125em}.swal2-checkbox input,.swal2-radio input{flex-shrink:0;margin:0 .4em}.swal2-input-label{display:flex;justify-content:center;margin:1em auto 0}.swal2-validation-message{align-items:center;justify-content:center;margin:1em 0 0;padding:.625em;overflow:hidden;background:#f0f0f0;color:#666;font-size:1em;font-weight:300}.swal2-validation-message::before{content:"!";display:inline-block;width:1.5em;min-width:1.5em;height:1.5em;margin:0 .625em;border-radius:50%;background-color:#f27474;color:#fff;font-weight:600;line-height:1.5em;text-align:center}.swal2-icon{position:relative;box-sizing:content-box;justify-content:center;width:5em;height:5em;margin:2.5em auto .6em;border:.25em solid transparent;border-radius:50%;border-color:#000;font-family:inherit;line-height:5em;cursor:default;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}.swal2-icon .swal2-icon-content{display:flex;align-items:center;font-size:3.75em}.swal2-icon.swal2-error{border-color:#f27474;color:#f27474}.swal2-icon.swal2-error .swal2-x-mark{position:relative;flex-grow:1}.swal2-icon.swal2-error [class^=swal2-x-mark-line]{display:block;position:absolute;top:2.3125em;width:2.9375em;height:.3125em;border-radius:.125em;background-color:#f27474}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=left]{left:1.0625em;transform:rotate(45deg)}.swal2-icon.swal2-error [class^=swal2-x-mark-line][class$=right]{right:1em;transform:rotate(-45deg)}.swal2-icon.swal2-error.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-error.swal2-icon-show .swal2-x-mark{-webkit-animation:swal2-animate-error-x-mark .5s;animation:swal2-animate-error-x-mark .5s}.swal2-icon.swal2-warning{border-color:#facea8;color:#f8bb86}.swal2-icon.swal2-warning.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-warning.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .5s;animation:swal2-animate-i-mark .5s}.swal2-icon.swal2-info{border-color:#9de0f6;color:#3fc3ee}.swal2-icon.swal2-info.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-info.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-i-mark .8s;animation:swal2-animate-i-mark .8s}.swal2-icon.swal2-question{border-color:#c9dae1;color:#87adbd}.swal2-icon.swal2-question.swal2-icon-show{-webkit-animation:swal2-animate-error-icon .5s;animation:swal2-animate-error-icon .5s}.swal2-icon.swal2-question.swal2-icon-show .swal2-icon-content{-webkit-animation:swal2-animate-question-mark .8s;animation:swal2-animate-question-mark .8s}.swal2-icon.swal2-success{border-color:#a5dc86;color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-circular-line]{position:absolute;width:3.75em;height:7.5em;transform:rotate(45deg);border-radius:50%}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=left]{top:-.4375em;left:-2.0635em;transform:rotate(-45deg);transform-origin:3.75em 3.75em;border-radius:7.5em 0 0 7.5em}.swal2-icon.swal2-success [class^=swal2-success-circular-line][class$=right]{top:-.6875em;left:1.875em;transform:rotate(-45deg);transform-origin:0 3.75em;border-radius:0 7.5em 7.5em 0}.swal2-icon.swal2-success .swal2-success-ring{position:absolute;z-index:2;top:-.25em;left:-.25em;box-sizing:content-box;width:100%;height:100%;border:.25em solid rgba(165,220,134,.3);border-radius:50%}.swal2-icon.swal2-success .swal2-success-fix{position:absolute;z-index:1;top:.5em;left:1.625em;width:.4375em;height:5.625em;transform:rotate(-45deg)}.swal2-icon.swal2-success [class^=swal2-success-line]{display:block;position:absolute;z-index:2;height:.3125em;border-radius:.125em;background-color:#a5dc86}.swal2-icon.swal2-success [class^=swal2-success-line][class$=tip]{top:2.875em;left:.8125em;width:1.5625em;transform:rotate(45deg)}.swal2-icon.swal2-success [class^=swal2-success-line][class$=long]{top:2.375em;right:.5em;width:2.9375em;transform:rotate(-45deg)}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-tip{-webkit-animation:swal2-animate-success-line-tip .75s;animation:swal2-animate-success-line-tip .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-line-long{-webkit-animation:swal2-animate-success-line-long .75s;animation:swal2-animate-success-line-long .75s}.swal2-icon.swal2-success.swal2-icon-show .swal2-success-circular-line-right{-webkit-animation:swal2-rotate-success-circular-line 4.25s ease-in;animation:swal2-rotate-success-circular-line 4.25s ease-in}.swal2-progress-steps{flex-wrap:wrap;align-items:center;max-width:100%;margin:1.25em auto;padding:0;background:inherit;font-weight:600}.swal2-progress-steps li{display:inline-block;position:relative}.swal2-progress-steps .swal2-progress-step{z-index:20;flex-shrink:0;width:2em;height:2em;border-radius:2em;background:#2778c4;color:#fff;line-height:2em;text-align:center}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step{background:#2778c4}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step{background:#add8e6;color:#fff}.swal2-progress-steps .swal2-progress-step.swal2-active-progress-step~.swal2-progress-step-line{background:#add8e6}.swal2-progress-steps .swal2-progress-step-line{z-index:10;flex-shrink:0;width:2.5em;height:.4em;margin:0 -1px;background:#2778c4}[class^=swal2]{-webkit-tap-highlight-color:transparent}.swal2-show{-webkit-animation:swal2-show .3s;animation:swal2-show .3s}.swal2-hide{-webkit-animation:swal2-hide .15s forwards;animation:swal2-hide .15s forwards}.swal2-noanimation{transition:none}.swal2-scrollbar-measure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}.swal2-rtl .swal2-close{margin-right:initial;margin-left:0}.swal2-rtl .swal2-timer-progress-bar{right:0;left:auto}@-webkit-keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@keyframes swal2-toast-show{0%{transform:translateY(-.625em) rotateZ(2deg)}33%{transform:translateY(0) rotateZ(-2deg)}66%{transform:translateY(.3125em) rotateZ(2deg)}100%{transform:translateY(0) rotateZ(0)}}@-webkit-keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@keyframes swal2-toast-hide{100%{transform:rotateZ(1deg);opacity:0}}@-webkit-keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@keyframes swal2-toast-animate-success-line-tip{0%{top:.5625em;left:.0625em;width:0}54%{top:.125em;left:.125em;width:0}70%{top:.625em;left:-.25em;width:1.625em}84%{top:1.0625em;left:.75em;width:.5em}100%{top:1.125em;left:.1875em;width:.75em}}@-webkit-keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@keyframes swal2-toast-animate-success-line-long{0%{top:1.625em;right:1.375em;width:0}65%{top:1.25em;right:.9375em;width:0}84%{top:.9375em;right:0;width:1.125em}100%{top:.9375em;right:.1875em;width:1.375em}}@-webkit-keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@keyframes swal2-show{0%{transform:scale(.7)}45%{transform:scale(1.05)}80%{transform:scale(.95)}100%{transform:scale(1)}}@-webkit-keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@keyframes swal2-hide{0%{transform:scale(1);opacity:1}100%{transform:scale(.5);opacity:0}}@-webkit-keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@keyframes swal2-animate-success-line-tip{0%{top:1.1875em;left:.0625em;width:0}54%{top:1.0625em;left:.125em;width:0}70%{top:2.1875em;left:-.375em;width:3.125em}84%{top:3em;left:1.3125em;width:1.0625em}100%{top:2.8125em;left:.8125em;width:1.5625em}}@-webkit-keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@keyframes swal2-animate-success-line-long{0%{top:3.375em;right:2.875em;width:0}65%{top:3.375em;right:2.875em;width:0}84%{top:2.1875em;right:0;width:3.4375em}100%{top:2.375em;right:.5em;width:2.9375em}}@-webkit-keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@keyframes swal2-rotate-success-circular-line{0%{transform:rotate(-45deg)}5%{transform:rotate(-45deg)}12%{transform:rotate(-405deg)}100%{transform:rotate(-405deg)}}@-webkit-keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@keyframes swal2-animate-error-x-mark{0%{margin-top:1.625em;transform:scale(.4);opacity:0}50%{margin-top:1.625em;transform:scale(.4);opacity:0}80%{margin-top:-.375em;transform:scale(1.15)}100%{margin-top:0;transform:scale(1);opacity:1}}@-webkit-keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-error-icon{0%{transform:rotateX(100deg);opacity:0}100%{transform:rotateX(0);opacity:1}}@-webkit-keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@keyframes swal2-rotate-loading{0%{transform:rotate(0)}100%{transform:rotate(360deg)}}@-webkit-keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@keyframes swal2-animate-question-mark{0%{transform:rotateY(-360deg)}100%{transform:rotateY(0)}}@-webkit-keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}@keyframes swal2-animate-i-mark{0%{transform:rotateZ(45deg);opacity:0}25%{transform:rotateZ(-25deg);opacity:.4}50%{transform:rotateZ(15deg);opacity:.8}75%{transform:rotateZ(-5deg);opacity:1}100%{transform:rotateX(0);opacity:1}}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow:hidden}body.swal2-height-auto{height:auto!important}body.swal2-no-backdrop .swal2-container{background-color:transparent!important;pointer-events:none}body.swal2-no-backdrop .swal2-container .swal2-popup{pointer-events:all}body.swal2-no-backdrop .swal2-container .swal2-modal{box-shadow:0 0 10px rgba(0,0,0,.4)}@media print{body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown){overflow-y:scroll!important}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown)>[aria-hidden=true]{display:none}body.swal2-shown:not(.swal2-no-backdrop):not(.swal2-toast-shown) .swal2-container{position:static!important}}body.swal2-toast-shown .swal2-container{box-sizing:border-box;width:360px;max-width:100%;background-color:transparent;pointer-events:none}body.swal2-toast-shown .swal2-container.swal2-top{top:0;right:auto;bottom:auto;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-top-end,body.swal2-toast-shown .swal2-container.swal2-top-right{top:0;right:0;bottom:auto;left:auto}body.swal2-toast-shown .swal2-container.swal2-top-left,body.swal2-toast-shown .swal2-container.swal2-top-start{top:0;right:auto;bottom:auto;left:0}body.swal2-toast-shown .swal2-container.swal2-center-left,body.swal2-toast-shown .swal2-container.swal2-center-start{top:50%;right:auto;bottom:auto;left:0;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-center{top:50%;right:auto;bottom:auto;left:50%;transform:translate(-50%,-50%)}body.swal2-toast-shown .swal2-container.swal2-center-end,body.swal2-toast-shown .swal2-container.swal2-center-right{top:50%;right:0;bottom:auto;left:auto;transform:translateY(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-left,body.swal2-toast-shown .swal2-container.swal2-bottom-start{top:auto;right:auto;bottom:0;left:0}body.swal2-toast-shown .swal2-container.swal2-bottom{top:auto;right:auto;bottom:0;left:50%;transform:translateX(-50%)}body.swal2-toast-shown .swal2-container.swal2-bottom-end,body.swal2-toast-shown .swal2-container.swal2-bottom-right{top:auto;right:0;bottom:0;left:auto}'
        );
